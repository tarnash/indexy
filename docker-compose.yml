services:
  php-backend:
    container_name: indexy-backend
    build:
      context: docker/php
      dockerfile: Dockerfile
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/var/www/.composer/cache:delegated
      - ./:/app
    environment:
      #XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
      PHP_IDE_CONFIG: 'serverName=Docker'
      COMPOSER_HOME: "/var/www/.composer"
    depends_on:
      - mysql
      - elasticsearch

  php-frontend:
    container_name: indexy-frontend
    build:
      context: docker/php
      dockerfile: Dockerfile
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/var/www/.composer/cache:delegated
      - ./:/app
    environment:
      #XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
      PHP_IDE_CONFIG: 'serverName=Docker'
      COMPOSER_HOME: "/var/www/.composer"
    depends_on:
      - mysql
      - elasticsearch

  nginx:
    container_name: indexy-nginx
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./:/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php-backend
      - php-frontend

  mysql:
    container_name: indexy-mysql
    image: mysql:8.0
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  elasticsearch:
    container_name: indexy-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"

  prometheus:
    container_name: indexy-prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: indexy-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter
    container_name: indexy-node-exporter
    ports:
      - "9100:9100"

  rabbitmq:
    container_name: indexy-rabbitmq
    hostname: ${RABBITMQ_HOST}
    restart: always
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "15672:15672"
    networks:
      - rabbitmq-cluster
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648 log_levels [{connection,error},{default,error}]

  rabbitmq1:
    container_name: indexy-rabbitmq1
    hostname: rabbitmq1
    restart: always
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data-1:/var/lib/rabbitmq
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - "5673:5672"
      - "15675:15672"
    networks:
      - rabbitmq-cluster
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_COOKIE}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648 log_levels [{connection,error},{default,error}]

  rabbitmq2:
    container_name: indexy-rabbitmq2
    hostname: rabbitmq2
    restart: always
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data-2:/var/lib/rabbitmq
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - "5674:5672"
      - "15673:15672"
    networks:
      - rabbitmq-cluster
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_COOKIE}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648 log_levels [{connection,error},{default,error}]

  rabbitmq3:
    container_name: indexy-rabbitmq3
    hostname: rabbitmq3
    restart: always
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data-3:/var/lib/rabbitmq
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - "5675:5672"
      - "15674:15672"
    networks:
      - rabbitmq-cluster
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_COOKIE}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648 log_levels [{connection,error},{default,error}]

  haproxy:
    container_name: indexy-haproxy
    image: haproxy:2.6.6-alpine
    restart: always
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "15671:15672"
      - "5670:5672"
    networks:
      - rabbitmq-cluster
    links:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3

volumes:
  mysql_data:
  grafana_data:
  rabbitmq_data:
  rabbitmq_data-1:
  rabbitmq_data-2:
  rabbitmq_data-3:

networks:
  rabbitmq-cluster:
    driver: bridge

